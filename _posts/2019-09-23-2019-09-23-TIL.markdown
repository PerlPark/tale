---
layout: post
title: "2019/09/23 TIL(Today I Learn) - Currying 함수에서 arguments, rest parameter 사용하기"
date: 2019-09-23 23:55:55 +0900
description: # Add post description (optional)
img: # Add image post (optional)
fig-caption: # Add figcaption (optional)
tags: [TIL, Javascript] # add tag
---

### Rest Parameter
https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Functions/rest_parameters
```js
function currying (func) {
    return function (...args) { // 레스트 파라미터는 함수에 파라미터로 추가되어야 합니다.
        return func(...args); // "args"는 배열이 되기 때문에 "…args"로 작성하여 배열을 해체한 뒤 인수로 사용합니다.
    }
}
let plus = currying (function(x, y, z){ return x + y + z });
plus(1,2,3) // 6
```
***
### arguments
https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Functions/arguments
```js
function currying (func) {
    return function () {
        return func(...arguments); // "arguments"는 유사 배열이기 때문에 "…arguments"로 작성하여 배열을 해체한 뒤 인수로 사용합니다.
    }
}
let plus = currying (function(x, y, z){ return x + y + z });
plus(1,2,3) // 6
```
***
### Function.prototype.apply()
https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/apply
```js
function currying (func) {
    return function () {
        return func.apply(null, arguments); // apply 메서드는 인수를 배열로 받기 때문에 "arguments"로 작성하여 사용합니다.
    }
}
let plus = currying (function(x, y, z){ return x + y + z });
plus(1,2,3) // 6
```
***
### Function.prototype.call()
https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/call
```js
function currying (func) {
    return function () {
        return func.call(null, ...arguments); // call 메서드는 인수를 쉼표(,)로 구분하여 받기 때문에 “...arguments"로 작성하여 배열을 해체한 뒤 사용합니다.
    }
}
let plus = currying (function(x, y, z){ return x + y + z });
plus(1,2,3) // 6
```
