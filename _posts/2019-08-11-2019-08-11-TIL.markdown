---
layout: post
title: 2019/08/11 TIL(Today I Learn) 
date: 2019-08-11 23:59:59 +0900
description: # Add post description (optional)
img: # Add image post (optional)
fig-caption: # Add figcaption (optional)
tags: [TIL] # add tag
---

### 코플릿 Javascript Basic을 끝냈다.
* 마지막 7번째 주제는 객체에 특정한 key에 들어있는 배열을 이용하는 문제였다.
* 객체에 특정한 key 값이 없거나, key 값에 대응하는 요소가 배열이 아닐때 또는 해당 배열이 비어있을 경우, undefined나 빈 값 또는 빈 배열을 반환해야하는 조건이 있었다.
  * 처음에는 특정한 key 값이 있는지 확인하기 위해 조건문 `if(key in obj)`을 세워주었다.
  * 하지만 해당 key가 존재하지 않으면, 요소가 배열인지 확인하는 조건문 `if(Array.isArray(obj[key]))`에서 함께 걸러지는 것을 확인했다.
  * 배열이 비어있을 경우에도 특정 인덱스로 값을 조회하거나 filter, map, silce 메소드를 통하면 자동으로 undefined나 빈 배열을 반환해주었다. 따라서 별도의 조건문을 작성하지 않았다.
  * 예외적으로 빈 배열에 reduce 메소드를 사용할 땐 오류가 나서 조건문 `if(obj[key].length === 0)`을 추가해주었다.
  * 비슷한 문제를 계속 풀다보니 나중에는 아래와 같은 포맷으로 작성하게 되었다.

```js
if(!Array.isArray(obj[key])){
  return [];
}
return obj[key].map(x => x ** 2);
```

#### 배운 것 정리
* `if(!Array.isArray(obj[key]))` => Property(obj[key])가 배열이 아니거나 빈 값일 때 실행됨
* `if(Array.isArray(obj[key]))` => Property(obj[key])가 배열일 때 실행됨 (빈 배열 포함)
* `undefined`가 반환되는 상황
  * arr[nonExistentIndex] => 존재하지 않는 인덱스를 통해 조회
  * nullArr[index] => 비어있는 배열에서 인덱스를 통해 조회
* `빈 배열`이 반환되는 상황
  * nullArr.filter OR .map => 새로운 배열이 반환되는 메소드
  * nullArr.slice => 원본의 자료형을 따른 새로운 내용을 반환
* `오류`가 발생하는 상황 => 조건문 if(배열.length === 0)이 필요하다.
  * nullArr.reduce